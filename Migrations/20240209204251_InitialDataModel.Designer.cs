// <auto-generated />
using System;
using MerchShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MerchShop.Migrations
{
    [DbContext(typeof(MerchShopContext))]
    [Migration("20240209204251_InitialDataModel")]
    partial class InitialDataModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MerchShop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("MerchID");

                    b.HasIndex("WarehouseID")
                        .IsUnique();

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryID = 1,
                            MerchID = 2,
                            PurchaseDate = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 4.50m,
                            Quantity = 243,
                            SalePrice = 14.99m,
                            WarehouseID = 7
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.Property<int>("MerchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchID"));

                    b.Property<string>("ItemDescripion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MerchType")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("MerchID");

                    b.HasIndex("VendorID");

                    b.ToTable("Merch");

                    b.HasData(
                        new
                        {
                            MerchID = 1,
                            ItemDescripion = "Protective phone case created with polycarbonate and TPU materials for the iPhone 14.",
                            ItemName = "Protective Phone Case for iPhone 14",
                            MerchType = 1,
                            Rating = 3f,
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 2,
                            ItemDescripion = "High quality cotton baseball cap with adjustable closure to fit most head sizes.",
                            ItemName = "Cotton Baseball Cap",
                            MerchType = 0,
                            Rating = 4f,
                            VendorID = 3
                        });
                });

            modelBuilder.Entity("MerchShop.Models.MerchReview", b =>
                {
                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MerchID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("MerchReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("MerchShop.Models.OrderLines", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("OrderID", "InventoryID");

                    b.HasIndex("InventoryID");

                    b.ToTable("Orderline");
                });

            modelBuilder.Entity("MerchShop.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("OverallRating")
                        .HasColumnType("real");

                    b.Property<string>("WebURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Name = "Merch Master",
                            OverallRating = 4.5f,
                            WebURL = "www.merchmaster.com"
                        },
                        new
                        {
                            VendorID = 2,
                            Name = "Merch Maven",
                            OverallRating = 4.2f,
                            WebURL = "www.merchmaven.com"
                        },
                        new
                        {
                            VendorID = 3,
                            Name = "Trendy Threads",
                            OverallRating = 4.8f,
                            WebURL = "www.trendythreads.com"
                        },
                        new
                        {
                            VendorID = 4,
                            Name = "Merch Mania",
                            OverallRating = 4.4f,
                            WebURL = "www.merchmania.com"
                        },
                        new
                        {
                            VendorID = 5,
                            Name = "Street Smart Apparel",
                            OverallRating = 4.7f,
                            WebURL = "www.streetsmartapparel.com"
                        },
                        new
                        {
                            VendorID = 6,
                            Name = "Magic Merch",
                            OverallRating = 4.3f,
                            WebURL = "www.magicmerch.com"
                        },
                        new
                        {
                            VendorID = 7,
                            Name = "Merch Mode",
                            OverallRating = 4.6f,
                            WebURL = "www.merchmode.com"
                        },
                        new
                        {
                            VendorID = 8,
                            Name = "Mademoiselle Merch",
                            OverallRating = 4.1f,
                            WebURL = "www.mademoisellemerch.com"
                        },
                        new
                        {
                            VendorID = 9,
                            Name = "Merch Marvel",
                            OverallRating = 4.9f,
                            WebURL = "www.merchmarvel.com"
                        },
                        new
                        {
                            VendorID = 10,
                            Name = "Vogue Vibes",
                            OverallRating = 4f,
                            WebURL = "www.voguevibes.com"
                        });
                });

            modelBuilder.Entity("MerchShop.Models.VendorReview", b =>
                {
                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("VendorID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("VendorReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("ShelfNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("WarehouseNumber")
                        .HasColumnType("int");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseID = 1,
                            ShelfNumber = "One",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 2,
                            ShelfNumber = "Two",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 3,
                            ShelfNumber = "Three",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 4,
                            ShelfNumber = "Four",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 5,
                            ShelfNumber = "One",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 6,
                            ShelfNumber = "Two",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 7,
                            ShelfNumber = "Three",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 8,
                            ShelfNumber = "Four",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 9,
                            ShelfNumber = "One",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 10,
                            ShelfNumber = "Two",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 11,
                            ShelfNumber = "Three",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 12,
                            ShelfNumber = "Four",
                            WarehouseNumber = 2
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.HasOne("MerchShop.Models.Merch", "Merch")
                        .WithMany("Inventories")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Warehouse", "Warehouse")
                        .WithOne("Inventory")
                        .HasForeignKey("MerchShop.Models.Inventory", "WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.HasOne("MerchShop.Models.Vendor", "Vendor")
                        .WithMany("Merches")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("MerchShop.Models.MerchReview", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("MerchReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Merch", "Merch")
                        .WithMany("MerchReviews")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MerchShop.Models.OrderLines", b =>
                {
                    b.HasOne("MerchShop.Models.Inventory", "Inventory")
                        .WithMany("OrderLine")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Order", "Order")
                        .WithMany("OrderLine")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MerchShop.Models.VendorReview", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("VendorReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Vendor", "Vendor")
                        .WithMany("VendorReviews")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("MerchShop.Models.Customer", b =>
                {
                    b.Navigation("MerchReviews");

                    b.Navigation("Orders");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("MerchReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("MerchShop.Models.Vendor", b =>
                {
                    b.Navigation("Merches");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Warehouse", b =>
                {
                    b.Navigation("Inventory")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
