// <auto-generated />
using System;
using MerchShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MerchShop.Migrations
{
    [DbContext(typeof(MerchShopContext))]
    [Migration("20240303012124_initiateTables")]
    partial class initiateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MerchShop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Email = "emily.rodriguez@example.com",
                            FirstName = "Emily",
                            LastName = "Rodriguez"
                        },
                        new
                        {
                            CustomerID = 2,
                            Email = "james.thompson@example.com",
                            FirstName = "James",
                            LastName = "Thompson"
                        },
                        new
                        {
                            CustomerID = 3,
                            Email = "sophia.patel@example.com",
                            FirstName = "Sophia",
                            LastName = "Patel"
                        },
                        new
                        {
                            CustomerID = 4,
                            Email = "benjamin.garcia@example.com",
                            FirstName = "Benjamin",
                            LastName = "Garcia"
                        },
                        new
                        {
                            CustomerID = 5,
                            Email = "olivia.nguyen@example.com",
                            FirstName = "Olivia",
                            LastName = "Nguyen"
                        },
                        new
                        {
                            CustomerID = 6,
                            Email = "ethan.taylor@example.com",
                            FirstName = "Ethan",
                            LastName = "Taylor"
                        },
                        new
                        {
                            CustomerID = 7,
                            Email = "mia.smith@example.com",
                            FirstName = "Mia",
                            LastName = "Smith"
                        },
                        new
                        {
                            CustomerID = 8,
                            Email = "jacob.martinez@example.com",
                            FirstName = "Jacob",
                            LastName = "Martinez"
                        },
                        new
                        {
                            CustomerID = 9,
                            Email = "ava.johnson@example.com",
                            FirstName = "Ava",
                            LastName = "Johnson"
                        },
                        new
                        {
                            CustomerID = 10,
                            Email = "isabella.brown@example.com",
                            FirstName = "Isabella",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryID"));

                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("SalePrice")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("WarehouseID")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("MerchID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Inventory");

                    b.HasData(
                        new
                        {
                            InventoryID = 1,
                            MerchID = 1,
                            PurchaseDate = new DateTime(2022, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 10.25m,
                            Quantity = 60,
                            SalePrice = 15.99m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryID = 2,
                            MerchID = 2,
                            PurchaseDate = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 5.25m,
                            Quantity = 150,
                            SalePrice = 7.50m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryID = 3,
                            MerchID = 3,
                            PurchaseDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 16.75m,
                            Quantity = 257,
                            SalePrice = 19.95m,
                            WarehouseID = 8
                        },
                        new
                        {
                            InventoryID = 4,
                            MerchID = 4,
                            PurchaseDate = new DateTime(2020, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 14.20m,
                            Quantity = 83,
                            SalePrice = 17.88m,
                            WarehouseID = 6
                        },
                        new
                        {
                            InventoryID = 5,
                            MerchID = 5,
                            PurchaseDate = new DateTime(2021, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 3.45m,
                            Quantity = 360,
                            SalePrice = 5.56m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryID = 6,
                            MerchID = 6,
                            PurchaseDate = new DateTime(2018, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 18.75m,
                            Quantity = 184,
                            SalePrice = 23.15m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryID = 7,
                            MerchID = 7,
                            PurchaseDate = new DateTime(2023, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 8.75m,
                            Quantity = 347,
                            SalePrice = 11.50m,
                            WarehouseID = 10
                        },
                        new
                        {
                            InventoryID = 8,
                            MerchID = 8,
                            PurchaseDate = new DateTime(2022, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 4.99m,
                            Quantity = 218,
                            SalePrice = 6.99m,
                            WarehouseID = 12
                        },
                        new
                        {
                            InventoryID = 9,
                            MerchID = 9,
                            PurchaseDate = new DateTime(2020, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 13.25m,
                            Quantity = 425,
                            SalePrice = 17.85m,
                            WarehouseID = 6
                        },
                        new
                        {
                            InventoryID = 10,
                            MerchID = 10,
                            PurchaseDate = new DateTime(2021, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 60.00m,
                            Quantity = 40,
                            SalePrice = 65.99m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryID = 11,
                            MerchID = 11,
                            PurchaseDate = new DateTime(2022, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 30.75m,
                            Quantity = 281,
                            SalePrice = 45.88m,
                            WarehouseID = 11
                        },
                        new
                        {
                            InventoryID = 12,
                            MerchID = 12,
                            PurchaseDate = new DateTime(2023, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 7.25m,
                            Quantity = 204,
                            SalePrice = 10.55m,
                            WarehouseID = 9
                        },
                        new
                        {
                            InventoryID = 13,
                            MerchID = 13,
                            PurchaseDate = new DateTime(2017, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 8.75m,
                            Quantity = 82,
                            SalePrice = 12.54m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryID = 14,
                            MerchID = 14,
                            PurchaseDate = new DateTime(2019, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 5.50m,
                            Quantity = 174,
                            SalePrice = 8.12m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryID = 15,
                            MerchID = 15,
                            PurchaseDate = new DateTime(2021, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 4.20m,
                            Quantity = 246,
                            SalePrice = 5.45m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryID = 16,
                            MerchID = 16,
                            PurchaseDate = new DateTime(2023, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 12.50m,
                            Quantity = 129,
                            SalePrice = 14.87m,
                            WarehouseID = 11
                        },
                        new
                        {
                            InventoryID = 17,
                            MerchID = 17,
                            PurchaseDate = new DateTime(2021, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 18.25m,
                            Quantity = 95,
                            SalePrice = 25.35m,
                            WarehouseID = 10
                        },
                        new
                        {
                            InventoryID = 18,
                            MerchID = 18,
                            PurchaseDate = new DateTime(2020, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 10.50m,
                            Quantity = 63,
                            SalePrice = 16.21m,
                            WarehouseID = 12
                        },
                        new
                        {
                            InventoryID = 19,
                            MerchID = 19,
                            PurchaseDate = new DateTime(2019, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 9.75m,
                            Quantity = 142,
                            SalePrice = 11.32m,
                            WarehouseID = 6
                        },
                        new
                        {
                            InventoryID = 20,
                            MerchID = 20,
                            PurchaseDate = new DateTime(2021, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 6.75m,
                            Quantity = 276,
                            SalePrice = 8.31m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryID = 21,
                            MerchID = 21,
                            PurchaseDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 20.50m,
                            Quantity = 101,
                            SalePrice = 31.57m,
                            WarehouseID = 7
                        },
                        new
                        {
                            InventoryID = 22,
                            MerchID = 22,
                            PurchaseDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 15.75m,
                            Quantity = 165,
                            SalePrice = 28.16m,
                            WarehouseID = 9
                        },
                        new
                        {
                            InventoryID = 23,
                            MerchID = 23,
                            PurchaseDate = new DateTime(2019, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 14.25m,
                            Quantity = 144,
                            SalePrice = 19.54m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryID = 24,
                            MerchID = 24,
                            PurchaseDate = new DateTime(2020, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 25.50m,
                            Quantity = 297,
                            SalePrice = 30.54m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryID = 25,
                            MerchID = 25,
                            PurchaseDate = new DateTime(2021, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 6.75m,
                            Quantity = 26,
                            SalePrice = 9.95m,
                            WarehouseID = 9
                        },
                        new
                        {
                            InventoryID = 26,
                            MerchID = 26,
                            PurchaseDate = new DateTime(2022, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 10.75m,
                            Quantity = 258,
                            SalePrice = 15.50m,
                            WarehouseID = 7
                        },
                        new
                        {
                            InventoryID = 27,
                            MerchID = 27,
                            PurchaseDate = new DateTime(2018, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 6.50m,
                            Quantity = 34,
                            SalePrice = 10.05m,
                            WarehouseID = 3
                        },
                        new
                        {
                            InventoryID = 28,
                            MerchID = 28,
                            PurchaseDate = new DateTime(2023, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 4.25m,
                            Quantity = 208,
                            SalePrice = 7.74m,
                            WarehouseID = 8
                        },
                        new
                        {
                            InventoryID = 29,
                            MerchID = 29,
                            PurchaseDate = new DateTime(2020, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 45.75m,
                            Quantity = 25,
                            SalePrice = 55.90m,
                            WarehouseID = 10
                        },
                        new
                        {
                            InventoryID = 30,
                            MerchID = 30,
                            PurchaseDate = new DateTime(2022, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 10.75m,
                            Quantity = 140,
                            SalePrice = 14.32m,
                            WarehouseID = 1
                        },
                        new
                        {
                            InventoryID = 31,
                            MerchID = 31,
                            PurchaseDate = new DateTime(2023, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 8.75m,
                            Quantity = 275,
                            SalePrice = 11.95m,
                            WarehouseID = 11
                        },
                        new
                        {
                            InventoryID = 32,
                            MerchID = 32,
                            PurchaseDate = new DateTime(2022, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 15.50m,
                            Quantity = 129,
                            SalePrice = 19.78m,
                            WarehouseID = 5
                        },
                        new
                        {
                            InventoryID = 33,
                            MerchID = 33,
                            PurchaseDate = new DateTime(2020, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 20.25m,
                            Quantity = 66,
                            SalePrice = 29.35m,
                            WarehouseID = 2
                        },
                        new
                        {
                            InventoryID = 34,
                            MerchID = 34,
                            PurchaseDate = new DateTime(2019, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 5.50m,
                            Quantity = 152,
                            SalePrice = 9.12m,
                            WarehouseID = 6
                        },
                        new
                        {
                            InventoryID = 35,
                            MerchID = 35,
                            PurchaseDate = new DateTime(2021, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 35.75m,
                            Quantity = 104,
                            SalePrice = 49.99m,
                            WarehouseID = 8
                        },
                        new
                        {
                            InventoryID = 36,
                            MerchID = 36,
                            PurchaseDate = new DateTime(2020, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 18.50m,
                            Quantity = 96,
                            SalePrice = 25.50m,
                            WarehouseID = 4
                        },
                        new
                        {
                            InventoryID = 37,
                            MerchID = 37,
                            PurchaseDate = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 7.25m,
                            Quantity = 188,
                            SalePrice = 10.32m,
                            WarehouseID = 7
                        },
                        new
                        {
                            InventoryID = 38,
                            MerchID = 38,
                            PurchaseDate = new DateTime(2021, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 11.75m,
                            Quantity = 118,
                            SalePrice = 14.50m,
                            WarehouseID = 9
                        },
                        new
                        {
                            InventoryID = 39,
                            MerchID = 39,
                            PurchaseDate = new DateTime(2022, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 20.25m,
                            Quantity = 107,
                            SalePrice = 27.98m,
                            WarehouseID = 12
                        },
                        new
                        {
                            InventoryID = 40,
                            MerchID = 40,
                            PurchaseDate = new DateTime(2023, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 4.50m,
                            Quantity = 64,
                            SalePrice = 6.99m,
                            WarehouseID = 1
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.Property<int>("MerchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchID"));

                    b.Property<string>("ItemDescripion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MerchType")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("MerchID");

                    b.HasIndex("VendorID");

                    b.ToTable("Merch");

                    b.HasData(
                        new
                        {
                            MerchID = 1,
                            ItemDescripion = "",
                            ItemName = "Cotton T-Shirt",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 2,
                            ItemDescripion = "",
                            ItemName = "Non-Slip Fuzzy Socks",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 3,
                            ItemDescripion = "",
                            ItemName = "Adjustable Baseball Cap",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 4,
                            ItemDescripion = "",
                            ItemName = "Reusable Car Decal",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 5,
                            ItemDescripion = "",
                            ItemName = "Longboard with Logo",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 6,
                            ItemDescripion = "",
                            ItemName = "iPhone 14 Phone Case",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 7,
                            ItemDescripion = "",
                            ItemName = "Portable Power Bank",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 8,
                            ItemDescripion = "",
                            ItemName = "Hoodie With Drawstring Closure",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 9,
                            ItemDescripion = "",
                            ItemName = "Customizable Bike Handlebar Grips",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 10,
                            ItemDescripion = "",
                            ItemName = "Personalized Friendship Bracelets",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 11,
                            ItemDescripion = "",
                            ItemName = "Logo Wireless Headphones",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 12,
                            ItemDescripion = "",
                            ItemName = "Custom Photo Car Fresheners",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 13,
                            ItemDescripion = "",
                            ItemName = "Laptop Sleeve with Custom Photo",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 14,
                            ItemDescripion = "",
                            ItemName = "Iron-On Clothing Patches",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 15,
                            ItemDescripion = "",
                            ItemName = "Personalized Writing License Plate Cover",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 16,
                            ItemDescripion = "",
                            ItemName = "Logo Steering Wheel Covers",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 17,
                            ItemDescripion = "",
                            ItemName = "Sun Glasses - Custom Print",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 18,
                            ItemDescripion = "",
                            ItemName = "Stylish Sneakers",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 19,
                            ItemDescripion = "",
                            ItemName = "Locket Necklace - Upload Photo",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 20,
                            ItemDescripion = "",
                            ItemName = "Logo Beanie For Cold Weather",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 21,
                            ItemDescripion = "",
                            ItemName = "Modern Boho Belt",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 9
                        },
                        new
                        {
                            MerchID = 22,
                            ItemDescripion = "",
                            ItemName = "Personalized Key Chain",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 23,
                            ItemDescripion = "",
                            ItemName = "Character Bobbleheads for Dashboard",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 24,
                            ItemDescripion = "",
                            ItemName = "Classic Demin Jacket with Patch Kit",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 25,
                            ItemDescripion = "",
                            ItemName = "Graphic Print T-Shirt",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 26,
                            ItemDescripion = "",
                            ItemName = "Wireless Phone Charger Car Mount",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 27,
                            ItemDescripion = "",
                            ItemName = "Custom Image Car Floor Mats",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 28,
                            ItemDescripion = "",
                            ItemName = "Aesthetic Wireless Charging Pad",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 29,
                            ItemDescripion = "",
                            ItemName = "Retro Flare Jeans with Custom Embroidery",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 1
                        },
                        new
                        {
                            MerchID = 30,
                            ItemDescripion = "",
                            ItemName = "Car Seat Organizer",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 7
                        },
                        new
                        {
                            MerchID = 31,
                            ItemDescripion = "",
                            ItemName = "Personalized Text - Wireless Earbuds Case",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 5
                        },
                        new
                        {
                            MerchID = 32,
                            ItemDescripion = "",
                            ItemName = "Athletic Jogger Pants",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 33,
                            ItemDescripion = "",
                            ItemName = "Super Hero Inspired Backpacks",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 4
                        },
                        new
                        {
                            MerchID = 34,
                            ItemDescripion = "",
                            ItemName = "TV Show Character Lunch Boxes",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 35,
                            ItemDescripion = "",
                            ItemName = "Cute Bluetooth Wireless Speaker",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 8
                        },
                        new
                        {
                            MerchID = 36,
                            ItemDescripion = "",
                            ItemName = "Compact Cable Organizer",
                            MerchType = 1,
                            Rating = 0f,
                            VendorID = 2
                        },
                        new
                        {
                            MerchID = 37,
                            ItemDescripion = "",
                            ItemName = "Mini Car Trash Can",
                            MerchType = 2,
                            Rating = 0f,
                            VendorID = 3
                        },
                        new
                        {
                            MerchID = 38,
                            ItemDescripion = "",
                            ItemName = "Printed Silk Scarf",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 10
                        },
                        new
                        {
                            MerchID = 39,
                            ItemDescripion = "",
                            ItemName = "Plaid Flannel Shirt",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 6
                        },
                        new
                        {
                            MerchID = 40,
                            ItemDescripion = "",
                            ItemName = "Custom Photo Reusable Shopping Bag",
                            MerchType = 0,
                            Rating = 0f,
                            VendorID = 9
                        });
                });

            modelBuilder.Entity("MerchShop.Models.MerchReview", b =>
                {
                    b.Property<int>("MerchID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MerchID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("MerchReviews");

                    b.HasData(
                        new
                        {
                            MerchID = 11,
                            CustomerID = 9,
                            Date = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "I love everything about it!"
                        },
                        new
                        {
                            MerchID = 15,
                            CustomerID = 4,
                            Date = new DateTime(2019, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Great product."
                        },
                        new
                        {
                            MerchID = 12,
                            CustomerID = 5,
                            Date = new DateTime(2020, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Came as advertised, nothing special about it though."
                        },
                        new
                        {
                            MerchID = 7,
                            CustomerID = 7,
                            Date = new DateTime(2022, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 2,
                            ReviewText = "Item smelled strongly of chemicals. I returned it immediately."
                        },
                        new
                        {
                            MerchID = 40,
                            CustomerID = 1,
                            Date = new DateTime(2021, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 3,
                            ReviewText = "It has been about 3 months since I purchased and it is already starting to show signs of wear."
                        },
                        new
                        {
                            MerchID = 9,
                            CustomerID = 2,
                            Date = new DateTime(2018, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "My order was perfect but the shipping took fooorever."
                        },
                        new
                        {
                            MerchID = 25,
                            CustomerID = 6,
                            Date = new DateTime(2019, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Great item, great customer service"
                        },
                        new
                        {
                            MerchID = 17,
                            CustomerID = 10,
                            Date = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Could not be happier with my purchase"
                        },
                        new
                        {
                            MerchID = 30,
                            CustomerID = 8,
                            Date = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 3,
                            ReviewText = "Well, its not Gucci but it gets the job done..."
                        },
                        new
                        {
                            MerchID = 26,
                            CustomerID = 3,
                            Date = new DateTime(2017, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "It was almost perfect! The seams are really itchy and I have to wear an undershirt."
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Total")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 9,
                            Date = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 2,
                            CustomerID = 4,
                            Date = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 3,
                            CustomerID = 5,
                            Date = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 4,
                            CustomerID = 7,
                            Date = new DateTime(2024, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 5,
                            CustomerID = 1,
                            Date = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 6,
                            CustomerID = 2,
                            Date = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 7,
                            CustomerID = 6,
                            Date = new DateTime(2024, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 8,
                            CustomerID = 10,
                            Date = new DateTime(2024, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 9,
                            CustomerID = 8,
                            Date = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OrderID = 10,
                            CustomerID = 3,
                            Date = new DateTime(2024, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MerchShop.Models.OrderLines", b =>
                {
                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("SubTotal")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("OrderID", "InventoryID");

                    b.HasIndex("InventoryID");

                    b.ToTable("Orderlines");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            InventoryID = 2,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 1,
                            InventoryID = 21,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 2,
                            InventoryID = 17,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 4,
                            InventoryID = 6,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 5,
                            InventoryID = 19,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 6,
                            InventoryID = 35,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 7,
                            InventoryID = 17,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 7,
                            InventoryID = 21,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 8,
                            InventoryID = 19,
                            Quantity = 3
                        },
                        new
                        {
                            OrderID = 9,
                            InventoryID = 7,
                            Quantity = 2
                        },
                        new
                        {
                            OrderID = 10,
                            InventoryID = 29,
                            Quantity = 1
                        },
                        new
                        {
                            OrderID = 10,
                            InventoryID = 20,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("OverallRating")
                        .HasColumnType("real");

                    b.Property<string>("WebURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendors");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Name = "Merch Master",
                            OverallRating = 4.5f,
                            WebURL = "www.merchmaster.com"
                        },
                        new
                        {
                            VendorID = 2,
                            Name = "Merch Maven",
                            OverallRating = 4.2f,
                            WebURL = "www.merchmaven.com"
                        },
                        new
                        {
                            VendorID = 3,
                            Name = "Trendy Threads",
                            OverallRating = 4.8f,
                            WebURL = "www.trendythreads.com"
                        },
                        new
                        {
                            VendorID = 4,
                            Name = "Merch Mania",
                            OverallRating = 4.4f,
                            WebURL = "www.merchmania.com"
                        },
                        new
                        {
                            VendorID = 5,
                            Name = "Street Smart Apparel",
                            OverallRating = 4.7f,
                            WebURL = "www.streetsmartapparel.com"
                        },
                        new
                        {
                            VendorID = 6,
                            Name = "Magic Merch",
                            OverallRating = 4.3f,
                            WebURL = "www.magicmerch.com"
                        },
                        new
                        {
                            VendorID = 7,
                            Name = "Merch Mode",
                            OverallRating = 4.6f,
                            WebURL = "www.merchmode.com"
                        },
                        new
                        {
                            VendorID = 8,
                            Name = "Mademoiselle Merch",
                            OverallRating = 4.1f,
                            WebURL = "www.mademoisellemerch.com"
                        },
                        new
                        {
                            VendorID = 9,
                            Name = "Merch Marvel",
                            OverallRating = 4.9f,
                            WebURL = "www.merchmarvel.com"
                        },
                        new
                        {
                            VendorID = 10,
                            Name = "Vogue Vibes",
                            OverallRating = 4f,
                            WebURL = "www.voguevibes.com"
                        });
                });

            modelBuilder.Entity("MerchShop.Models.VendorReview", b =>
                {
                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReviewScore")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("VendorID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("VendorReviews");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            CustomerID = 4,
                            Date = new DateTime(2023, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Fast shipping, would purchase again"
                        },
                        new
                        {
                            VendorID = 5,
                            CustomerID = 3,
                            Date = new DateTime(2019, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Fantastic quality! So pleased with my purchase"
                        },
                        new
                        {
                            VendorID = 2,
                            CustomerID = 9,
                            Date = new DateTime(2020, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 2,
                            ReviewText = "The stitching started fraying after about a month. Bummer since I loved wearing that shirt"
                        },
                        new
                        {
                            VendorID = 7,
                            CustomerID = 7,
                            Date = new DateTime(2022, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Everything is always great from this vendor, I would recommend them to anyone."
                        },
                        new
                        {
                            VendorID = 4,
                            CustomerID = 1,
                            Date = new DateTime(2021, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 3,
                            ReviewText = "Not the best quality, but not bad for the price"
                        },
                        new
                        {
                            VendorID = 9,
                            CustomerID = 2,
                            Date = new DateTime(2018, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "My order was perfect but the shipping took fooorever."
                        },
                        new
                        {
                            VendorID = 2,
                            CustomerID = 3,
                            Date = new DateTime(2019, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 3,
                            ReviewText = "I am not too impressed with this vendor. The items are sometimes so-so and their customer service is not the best"
                        },
                        new
                        {
                            VendorID = 10,
                            CustomerID = 8,
                            Date = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 4,
                            ReviewText = "Order came quickly"
                        },
                        new
                        {
                            VendorID = 3,
                            CustomerID = 10,
                            Date = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Absolutely perfect! I am excited to buy more."
                        },
                        new
                        {
                            VendorID = 6,
                            CustomerID = 5,
                            Date = new DateTime(2017, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReviewScore = 5,
                            ReviewText = "Purchased some things for my granddaughter and she loved them."
                        });
                });

            modelBuilder.Entity("MerchShop.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseID"));

                    b.Property<string>("ShelfNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("WarehouseNumber")
                        .HasColumnType("int");

                    b.HasKey("WarehouseID");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseID = 1,
                            ShelfNumber = "One",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 2,
                            ShelfNumber = "Two",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 3,
                            ShelfNumber = "Three",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 4,
                            ShelfNumber = "Four",
                            WarehouseNumber = 0
                        },
                        new
                        {
                            WarehouseID = 5,
                            ShelfNumber = "One",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 6,
                            ShelfNumber = "Two",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 7,
                            ShelfNumber = "Three",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 8,
                            ShelfNumber = "Four",
                            WarehouseNumber = 1
                        },
                        new
                        {
                            WarehouseID = 9,
                            ShelfNumber = "One",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 10,
                            ShelfNumber = "Two",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 11,
                            ShelfNumber = "Three",
                            WarehouseNumber = 2
                        },
                        new
                        {
                            WarehouseID = 12,
                            ShelfNumber = "Four",
                            WarehouseNumber = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MerchShop.Models.MerchShopUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.HasIndex("CustomerID")
                        .IsUnique()
                        .HasFilter("[CustomerID] IS NOT NULL");

                    b.HasDiscriminator().HasValue("MerchShopUser");
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.HasOne("MerchShop.Models.Merch", "Merch")
                        .WithMany("Inventories")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Warehouse", "Warehouse")
                        .WithMany("OrderLine")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merch");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.HasOne("MerchShop.Models.Vendor", "Vendor")
                        .WithMany("Merches")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("MerchShop.Models.MerchReview", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("MerchReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Merch", "Merch")
                        .WithMany("MerchReviews")
                        .HasForeignKey("MerchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MerchShop.Models.OrderLines", b =>
                {
                    b.HasOne("MerchShop.Models.Inventory", "Inventory")
                        .WithMany("OrderLine")
                        .HasForeignKey("InventoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Order", "Order")
                        .WithMany("OrderLine")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MerchShop.Models.VendorReview", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithMany("VendorReviews")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MerchShop.Models.Vendor", "Vendor")
                        .WithMany("VendorReviews")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MerchShop.Models.MerchShopUser", b =>
                {
                    b.HasOne("MerchShop.Models.Customer", "Customer")
                        .WithOne("CustomerUserLink")
                        .HasForeignKey("MerchShop.Models.MerchShopUser", "CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MerchShop.Models.Customer", b =>
                {
                    b.Navigation("CustomerUserLink")
                        .IsRequired();

                    b.Navigation("MerchReviews");

                    b.Navigation("Orders");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Inventory", b =>
                {
                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("MerchShop.Models.Merch", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("MerchReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Order", b =>
                {
                    b.Navigation("OrderLine");
                });

            modelBuilder.Entity("MerchShop.Models.Vendor", b =>
                {
                    b.Navigation("Merches");

                    b.Navigation("VendorReviews");
                });

            modelBuilder.Entity("MerchShop.Models.Warehouse", b =>
                {
                    b.Navigation("OrderLine");
                });
#pragma warning restore 612, 618
        }
    }
}
